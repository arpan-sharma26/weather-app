{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/testcomponent/testcomponent.component.ts","./src/app/testcomponent/testcomponent.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'apitest';\n}\n","<!--<p> {{sample}} </p>\r\n<p> {{var2}} </p>\r\n\r\n<button (click)=test()> Click me </button>\r\n-->\r\n\r\n<!DOCTYPE html>\r\n<!--[if gt IE 8]><!--> <html class=\"no-js\"> <!--<![endif]-->\r\n    <head>\r\n        <meta charset=\"utf-8\">\r\n        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n        <title></title>\r\n        <meta name=\"description\" content=\"\">\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n        <link rel=\"stylesheet\" href=\"\">\r\n    </head>\r\n    <body>\r\n        <div class=\"first\">\r\n            Weather Application\r\n        </div>\r\n        <app-testcomponent></app-testcomponent>\r\n    </body>\r\n</html>\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { TestcomponentComponent } from './testcomponent/testcomponent.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TestcomponentComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-testcomponent',\n  templateUrl: './testcomponent.component.html',\n  styleUrls: ['./testcomponent.component.css']\n})\nexport class TestcomponentComponent implements OnInit {\n  data2: any;\n  test4(var1:string) {\n    fetch(\"http://api.weatherstack.com/current?access_key=802a9696dc363634871597f5a9156625&query=\"+var1+\"\")\n      .then(response => response.json())\n      .then(data4 => this.data2 = data4)\n      \n      .catch(err => {\n        console.log(err)\n      })\n  }\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- API RESPONSE\n<input #newtext>\n<button (click)=test3(newtext.value)>Click me</button>\n<h1> {{data2.main.feels_like}} </h1>\n<br>\n<h1> {{data2.dt | json}} </h1>\n-->\n<br><br>\n<div class=\"second\">\n    <h3>Check your Area's weather.</h3>\n    <table>\n        <tr>\n            <td><label>Please enter city name:- </label></td>\n            <td><input #var1></td>\n        </tr>\n        <br>\n        <button style=\"position: relative; left: 5rem;\" (click)=test4(var1.value)>Submit</button>\n    </table>\n    <h3>Location - {{data2.request.query}} </h3>\n    <h3>TimeZone - {{data2.location.timezone_id}} </h3>\n    <h3>Local Time - {{data2.location.localtime}} </h3>\n    <h3>Temperature - {{data2.current.temperature}}°C</h3>\n    <h3>Feels Like - {{data2.current.feelslike}}°C</h3>\n    <img style=\"border-radius: 50%;\" src=\"{{data2.current.weather_icons}}\">\n    <h3>Weather - {{data2.current.weather_descriptions}}</h3>\n    <h3>Pressure - {{data2.current.pressure}}</h3>\n    <h3>Humidity - {{data2.current.humidity}}%</h3>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}